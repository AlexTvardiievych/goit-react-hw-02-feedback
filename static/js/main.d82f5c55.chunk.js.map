{"version":3,"sources":["components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/App.jsx","index.js","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","className","css","titleName","Statistics","good","neutral","bad","total","positivePercentage","names","FeedbackOptions","options","onLeaveFeedback","data","Object","keys","map","feedback","buttonClass","type","onClick","Notification","message","App","state","countTotalFeedback","values","reduce","el","countPositiveFeedbackPercentage","Math","round","handleFeedback","e","target","currentTarget","dataset","action","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAiBeA,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACtB,OACI,gCACI,oBAAIC,UAAWC,IAAIC,UAAnB,SAA+BJ,IAC9BC,M,gBCeEI,MAnBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC7C,OACI,qCACI,oBAAGR,UAAWC,IAAIQ,MAAlB,mBAAgCL,KAChC,oBAAGJ,UAAWC,IAAIQ,MAAlB,sBAAmCJ,KACnC,oBAAGL,UAAWC,IAAIQ,MAAlB,kBAA+BH,KAC/B,oBAAGN,UAAWC,IAAIQ,MAAlB,oBAAiCF,KACjC,oBAAGP,UAAWC,IAAIQ,MAAlB,gCAA6CD,EAA7C,Y,gBCiBGE,MAxBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC1BC,EAAOC,OAAOC,KAAKJ,GACzB,OACI,8BACKE,EAAKG,KAAI,SAAAC,GAAQ,OACd,wBACIjB,UAAWC,IAAIiB,YAEfC,KAAK,SACL,cAAaF,EACbG,QAASR,EALb,SAOKK,GALIA,SCAVI,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OAAO,4BAAIA,KCEMC,E,4MACjBC,MAAQ,CACJpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETmB,mBAAqB,WAEjB,OADcX,OAAOY,OAAO,EAAKF,OACpBG,QAAO,SAACpB,EAAOqB,GAAR,OAAerB,EAAQqB,IAAI,I,EAGnDC,gCAAkC,WAC9B,IAAQzB,EAAS,EAAKoB,MAAdpB,KACFG,EAAQ,EAAKkB,qBACnB,OAAOK,KAAKC,MAAO3B,EAAOG,EAAS,M,EAGvCyB,eAAiB,SAAAC,GACb,IAAMC,EAASD,EAAEE,cAAcC,QAAQC,OACvC,EAAKC,UAAS,SAAAC,GAAS,sBAClBL,EAASK,EAAUL,GAAU,O,4CAItC,WACI,MAA+BM,KAAKhB,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACI,eAAC,EAAD,CAASR,MAAM,wBAAf,UACI,cAAC,EAAD,CACIa,QAAS6B,KAAKhB,MACdZ,gBAAiB4B,KAAKR,iBAG1B,cAAC,EAAD,CAASlC,MAAM,aAAf,SACKM,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAC9B,cAAC,EAAD,CACIF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiC,KAAKf,qBACZjB,mBAAoBgC,KAAKX,oCAG7B,cAAC,EAAD,CAAcP,QAAQ,+B,GA3CbmB,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,MAAQ,4B,kBCA1BD,EAAOC,QAAU,CAAC,UAAY,6B,kBCA9BD,EAAOC,QAAU,CAAC,YAAc,wC","file":"static/js/main.d82f5c55.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from 'components/Section/Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n    return (\r\n        <div>\r\n            <h2 className={css.titleName}>{title}</h2>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node,\r\n};\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from 'components/Statistics/Statistics.module.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    return (\r\n        <>\r\n            <p className={css.names}>Good: {good}</p>\r\n            <p className={css.names}>Neutral: {neutral}</p>\r\n            <p className={css.names}>Bad: {bad}</p>\r\n            <p className={css.names}>Total: {total}</p>\r\n            <p className={css.names}>Positive feedback: {positivePercentage}% </p>\r\n        </>\r\n    );\r\n}\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from 'components/FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n    const data = Object.keys(options);\r\n    return (\r\n        <div>\r\n            {data.map(feedback => (\r\n                <button\r\n                    className={css.buttonClass}\r\n                    key={feedback}\r\n                    type=\"button\"\r\n                    data-action={feedback}\r\n                    onClick={onLeaveFeedback}\r\n                >\r\n                    {feedback}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.object.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n    return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport Section from './Section/Section';\r\nimport Statistics from './Statistics/Statistics';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Notification from './Notification/Notification';\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    };\r\n    countTotalFeedback = () => {\r\n        const total = Object.values(this.state);\r\n        return total.reduce((total, el) => total + el, 0);\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const { good } = this.state;\r\n        const total = this.countTotalFeedback();\r\n        return Math.round((good / total) * 100);\r\n    };\r\n\r\n    handleFeedback = e => {\r\n        const target = e.currentTarget.dataset.action;\r\n        this.setState(prevState => ({\r\n            [target]: prevState[target] + 1,\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const { good, neutral, bad } = this.state;\r\n        return (\r\n            <Section title=\"Please leave feedback\">\r\n                <FeedbackOptions\r\n                    options={this.state}\r\n                    onLeaveFeedback={this.handleFeedback}\r\n                />\r\n\r\n                <Section title=\"Statistics\">\r\n                    {good > 0 || neutral > 0 || bad > 0 ? (\r\n                        <Statistics\r\n                            good={good}\r\n                            neutral={neutral}\r\n                            bad={bad}\r\n                            total={this.countTotalFeedback()}\r\n                            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n                        />\r\n                    ) : (\r\n                        <Notification message=\"No feedback given\" />\r\n                    )}\r\n                </Section>\r\n            </Section>\r\n        );\r\n    }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"Statistics_names__27jss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleName\":\"Section_titleName__1ZBAz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonClass\":\"FeedbackOptions_buttonClass__2io-t\"};"],"sourceRoot":""}